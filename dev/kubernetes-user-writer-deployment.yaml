apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: user-writer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-writer
  strategy:
    type: RollingUpdate
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: user-writer
        tier: backend
        bump: bump-54
    spec:
      imagePullSecrets:
        - name: myregistrykey
      volumes:
        - name: "user-writer-tls"
          secret:
            secretName: "user-writer-tls"
        - name: "nginx-user-writer-dev-proxf-conf"
          configMap:
            name: "nginx-user-writer-dev-proxf-conf"
            items:
              - key: "nginx-user-writer.conf"
                path: "nginx-user-writer.conf"
      containers:
        - name: nginx
          image: nginx:1.7.9
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 768Mi
            requests:
              cpu: 100m
              memory: 256Mi
          ports:
            - containerPort: 443
            - containerPort: 80
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx", "-s", "quit"]
          volumeMounts:
            - name: "nginx-user-writer-dev-proxf-conf"
              mountPath: "/etc/nginx/conf.d"
            - name: "user-writer-tls"
              mountPath: "/etc/tls"
        - name: user-writer
          image: eu.gcr.io/time-to-teach-zone/user-writer:0.0.1-6
          imagePullPolicy: Always
          env:
            - name: MONGODB_CONNECTION_URI
              valueFrom:
                secretKeyRef:
                  name: mongoconnectionuri
                  key: mongoconnectionuri
                  optional: true
            - name: LOCAL_MONGO_DB
              value: "false"
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                secretKeyRef:
                  name: kafkasecrets
                  key: kafkabootstrapservers
          resources:
            limits:
              cpu: 300m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 60
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 60
            timeoutSeconds: 5